`timescale 1ns / 1ps

module tb_rgb_ctrl;

    // Parameters
    parameter WIDTH = 13;
    parameter CLK_PERIOD = 10; // 100 MHz clock

    // Signals
    reg clk;
    reg rst;
    reg change;
    reg [WIDTH-1:0] intensity;
    reg [2:0] selector;
    wire red_pwm, green_pwm, blue_pwm;

    // Instantiate the rgb_ctrl module
    rgb_ctrl #(.WIDTH(WIDTH)) dut (
        .clk(clk),
        .rst(rst),
        .change(change),
        .intensity(intensity),
        .selector(selector),
        .red_pwm(red_pwm),
        .green_pwm(green_pwm),
        .blue_pwm(blue_pwm)
    );

    // Clock generation
    always #(CLK_PERIOD/2) clk = ~clk;

    initial begin
        // Initialize signals
        clk = 0;
        rst = 1;
        change = 0;
        intensity = 0;
        selector = 0;

        // Apply reset
        #(2*CLK_PERIOD);
        rst = 0;
        #(2*CLK_PERIOD);

        // Set intensity to maximum value
        intensity = {WIDTH{1'b1}}; // All bits set to 1

        // Test setting intensity for Red
        selector = 3'b001;
        @(posedge clk);
        change = 1;
        @(posedge clk);
        change = 0;
        #(10*CLK_PERIOD);

        // Test setting intensity for Green
        selector = 3'b010;
        @(posedge clk);
        change = 1;
        @(posedge clk);
        change = 0;
        #(10*CLK_PERIOD);

        // Test setting intensity for Blue
        selector = 3'b100;
        @(posedge clk);
        change = 1;
        @(posedge clk);
        change = 0;
        #(10*CLK_PERIOD);

        // Test setting intensity for White (all LEDs on)
        selector = 3'b111;
        @(posedge clk);
        change = 1;
        @(posedge clk);
        change = 0;
        #(10*CLK_PERIOD);

        // End of simulation
        #(10*CLK_PERIOD);
        $finish;
    end

endmodule


