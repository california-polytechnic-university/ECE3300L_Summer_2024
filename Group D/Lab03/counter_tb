`timescale 1ns / 1ps


module counter_tb(
  );
         reg clk_tb,sysrst_tb,en_tb, sel_tb;
            wire [3:0] count_tb; 
            wire [6:0]seg_tb; 
       
      bcdcounter X1(
        .clk(clk_tb), 
        .reset(sysrst_tb),
        .enable(en_tb),
        .select(sel_tb),
        .out(count_tb)
        );
        
        seg X2(
            .hex(count_tb),
            .sseg(seg_tb)
        );
        
         initial
          begin
             clk_tb = 0;
                forever #5 
                clk_tb = ~clk_tb;
        end
        
        initial
        begin
            sysrst_tb = 1;
            en_tb = 1;
            sel_tb = 0;               
       
        #20
            sysrst_tb = 1;
            en_tb = 1;
            sel_tb = 0;  
        
        #20
            sysrst_tb = 1;
            en_tb = 0;
            sel_tb = 1; 
        
        #20 
            sysrst_tb = 0;
            en_tb = 1;
        
        #20
        
        $finish;
        end
endmodule
